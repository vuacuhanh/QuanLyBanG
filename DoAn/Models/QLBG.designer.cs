#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAn.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBG")]
	public partial class QLBGDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_DATHANG(CT_DATHANG instance);
    partial void UpdateCT_DATHANG(CT_DATHANG instance);
    partial void DeleteCT_DATHANG(CT_DATHANG instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertDANHMUC(DANHMUC instance);
    partial void UpdateDANHMUC(DANHMUC instance);
    partial void DeleteDANHMUC(DANHMUC instance);
    partial void InsertDATHANG(DATHANG instance);
    partial void UpdateDATHANG(DATHANG instance);
    partial void DeleteDATHANG(DATHANG instance);
    partial void InsertHINHANH(HINHANH instance);
    partial void UpdateHINHANH(HINHANH instance);
    partial void DeleteHINHANH(HINHANH instance);
    partial void InsertMAU(MAU instance);
    partial void UpdateMAU(MAU instance);
    partial void DeleteMAU(MAU instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertSize(Size instance);
    partial void UpdateSize(Size instance);
    partial void DeleteSize(Size instance);
    partial void InsertTHUONGHIEU(THUONGHIEU instance);
    partial void UpdateTHUONGHIEU(THUONGHIEU instance);
    partial void DeleteTHUONGHIEU(THUONGHIEU instance);
    #endregion
		
		public QLBGDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBGDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBGDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLBGDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}

        public QLBGDataContext() :
                            base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLBGConnectionString"].ConnectionString, mappingSource)

        {
			OnCreated();
        }

        public System.Data.Linq.Table<CT_DATHANG> CT_DATHANGs
		{
			get
			{
				return this.GetTable<CT_DATHANG>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<DATHANG> DATHANGs
		{
			get
			{
				return this.GetTable<DATHANG>();
			}
		}
		
		public System.Data.Linq.Table<HINHANH> HINHANHs
		{
			get
			{
				return this.GetTable<HINHANH>();
			}
		}
		
		public System.Data.Linq.Table<MAU> MAUs
		{
			get
			{
				return this.GetTable<MAU>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<Size> Sizes
		{
			get
			{
				return this.GetTable<Size>();
			}
		}
		
		public System.Data.Linq.Table<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this.GetTable<THUONGHIEU>();
			}
		}

        public object DatHangs { get; internal set; }
        public object CTDatHangs { get; internal set; }

        internal void SaveChanges()
        {
            throw new NotImplementedException();
        }

        internal void ClearGioHang(string sessionId)
        {
            throw new NotImplementedException();
        }

        internal void AddChiTietDatHang(int idDatHang, int iD_SanPham, int soLuong, double gia)
        {
            throw new NotImplementedException();
        }

        internal int AddDatHang(int khachHangId, double tongThanhTien)
        {
            throw new NotImplementedException();
        }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DATHANG")]
	public partial class CT_DATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CTDatHang;
		
		private System.Nullable<int> _ID_DatHang;
		
		private System.Nullable<int> _ID_SanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonViGia;
		
		private EntityRef<DATHANG> _DATHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTDatHangChanging(int value);
    partial void OnID_CTDatHangChanged();
    partial void OnID_DatHangChanging(System.Nullable<int> value);
    partial void OnID_DatHangChanged();
    partial void OnID_SanPhamChanging(System.Nullable<int> value);
    partial void OnID_SanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonViGiaChanging(System.Nullable<decimal> value);
    partial void OnDonViGiaChanged();
    #endregion
		
		public CT_DATHANG()
		{
			this._DATHANG = default(EntityRef<DATHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTDatHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_CTDatHang
		{
			get
			{
				return this._ID_CTDatHang;
			}
			set
			{
				if ((this._ID_CTDatHang != value))
				{
					this.OnID_CTDatHangChanging(value);
					this.SendPropertyChanging();
					this._ID_CTDatHang = value;
					this.SendPropertyChanged("ID_CTDatHang");
					this.OnID_CTDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DatHang", DbType="Int")]
		public System.Nullable<int> ID_DatHang
		{
			get
			{
				return this._ID_DatHang;
			}
			set
			{
				if ((this._ID_DatHang != value))
				{
					if (this._DATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DatHangChanging(value);
					this.SendPropertyChanging();
					this._ID_DatHang = value;
					this.SendPropertyChanged("ID_DatHang");
					this.OnID_DatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int")]
		public System.Nullable<int> ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViGia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> DonViGia
		{
			get
			{
				return this._DonViGia;
			}
			set
			{
				if ((this._DonViGia != value))
				{
					this.OnDonViGiaChanging(value);
					this.SendPropertyChanging();
					this._DonViGia = value;
					this.SendPropertyChanged("DonViGia");
					this.OnDonViGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATHANG_CT_DATHANG", Storage="_DATHANG", ThisKey="ID_DatHang", OtherKey="ID_DatHang", IsForeignKey=true)]
		public DATHANG DATHANG
		{
			get
			{
				return this._DATHANG.Entity;
			}
			set
			{
				DATHANG previousValue = this._DATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATHANG.Entity = null;
						previousValue.CT_DATHANGs.Remove(this);
					}
					this._DATHANG.Entity = value;
					if ((value != null))
					{
						value.CT_DATHANGs.Add(this);
						this._ID_DatHang = value.ID_DatHang;
					}
					else
					{
						this._ID_DatHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("DATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_DATHANG", Storage="_SANPHAM", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CT_DATHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CT_DATHANGs.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KhachHang;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _GioiTinh;
		
		private string _Email;
		
		private string _SoDienThoai;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private System.Nullable<bool> _Role;
		
		private EntitySet<DATHANG> _DATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KhachHangChanging(int value);
    partial void OnID_KhachHangChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnRoleChanging(System.Nullable<bool> value);
    partial void OnRoleChanged();
    #endregion
		
		public USER()
		{
			this._DATHANGs = new EntitySet<DATHANG>(new Action<DATHANG>(this.attach_DATHANGs), new Action<DATHANG>(this.detach_DATHANGs));
			OnCreated();
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_KhachHang", DbType = "Int NOT NULL", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID_KhachHang
        {
            get
            {
                return this._ID_KhachHang;
            }
            set
            {
                if ((this._ID_KhachHang != value))
                {
                    this.OnID_KhachHangChanging(value);
                    this.SendPropertyChanging();
                    this._ID_KhachHang = value;
                    this.SendPropertyChanged("ID_KhachHang");
                    this.OnID_KhachHangChanged();
                }
            }
        }


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(60)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(60)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(13)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Bit")]
		public System.Nullable<bool> Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_DATHANG", Storage="_DATHANGs", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang")]
		public EntitySet<DATHANG> DATHANGs
		{
			get
			{
				return this._DATHANGs;
			}
			set
			{
				this._DATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATHANGs(DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_DATHANGs(DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}

       
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DanhMuc;
		
		private string _TenDanhMuc;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DanhMucChanging(int value);
    partial void OnID_DanhMucChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
		
		public DANHMUC()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DanhMuc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DanhMuc
		{
			get
			{
				return this._ID_DanhMuc;
			}
			set
			{
				if ((this._ID_DanhMuc != value))
				{
					this.OnID_DanhMucChanging(value);
					this.SendPropertyChanging();
					this._ID_DanhMuc = value;
					this.SendPropertyChanged("ID_DanhMuc");
					this.OnID_DanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(50)")]
		public string TenDanhMuc
		{
			get
			{
				return this._TenDanhMuc;
			}
			set
			{
				if ((this._TenDanhMuc != value))
				{
					this.OnTenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMuc = value;
					this.SendPropertyChanged("TenDanhMuc");
					this.OnTenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_DanhMuc", OtherKey="ID_DanhMuc")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATHANG")]
	public partial class DATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DatHang;
		
		private System.Nullable<int> _ID_KhachHang;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<decimal> _SoLuong;
		
		private EntitySet<CT_DATHANG> _CT_DATHANGs;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DatHangChanging(int value);
    partial void OnID_DatHangChanged();
    partial void OnID_KhachHangChanging(System.Nullable<int> value);
    partial void OnID_KhachHangChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnSoLuongChanging(System.Nullable<decimal> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public DATHANG()
		{
			this._CT_DATHANGs = new EntitySet<CT_DATHANG>(new Action<CT_DATHANG>(this.attach_CT_DATHANGs), new Action<CT_DATHANG>(this.detach_CT_DATHANGs));
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DatHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DatHang
		{
			get
			{
				return this._ID_DatHang;
			}
			set
			{
				if ((this._ID_DatHang != value))
				{
					this.OnID_DatHangChanging(value);
					this.SendPropertyChanging();
					this._ID_DatHang = value;
					this.SendPropertyChanged("ID_DatHang");
					this.OnID_DatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhachHang", DbType="Int")]
		public System.Nullable<int> ID_KhachHang
		{
			get
			{
				return this._ID_KhachHang;
			}
			set
			{
				if ((this._ID_KhachHang != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._ID_KhachHang = value;
					this.SendPropertyChanged("ID_KhachHang");
					this.OnID_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATHANG_CT_DATHANG", Storage="_CT_DATHANGs", ThisKey="ID_DatHang", OtherKey="ID_DatHang")]
		public EntitySet<CT_DATHANG> CT_DATHANGs
		{
			get
			{
				return this._CT_DATHANGs;
			}
			set
			{
				this._CT_DATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_DATHANG", Storage="_USER", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.DATHANGs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.DATHANGs.Add(this);
						this._ID_KhachHang = value.ID_KhachHang;
					}
					else
					{
						this._ID_KhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}

        public double TongThanhTien { get; internal set; }

        public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DATHANG = this;
		}
		
		private void detach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHANH")]
	public partial class HINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Anh;
		
		private string _AnhChinh;
		
		private string _Anh1;
		
		private string _Anh2;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AnhChanging(int value);
    partial void OnID_AnhChanged();
    partial void OnAnhChinhChanging(string value);
    partial void OnAnhChinhChanged();
    partial void OnAnh1Changing(string value);
    partial void OnAnh1Changed();
    partial void OnAnh2Changing(string value);
    partial void OnAnh2Changed();
    #endregion
		
		public HINHANH()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Anh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Anh
		{
			get
			{
				return this._ID_Anh;
			}
			set
			{
				if ((this._ID_Anh != value))
				{
					this.OnID_AnhChanging(value);
					this.SendPropertyChanging();
					this._ID_Anh = value;
					this.SendPropertyChanged("ID_Anh");
					this.OnID_AnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhChinh", DbType="VarChar(255)")]
		public string AnhChinh
		{
			get
			{
				return this._AnhChinh;
			}
			set
			{
				if ((this._AnhChinh != value))
				{
					this.OnAnhChinhChanging(value);
					this.SendPropertyChanging();
					this._AnhChinh = value;
					this.SendPropertyChanged("AnhChinh");
					this.OnAnhChinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh1", DbType="VarChar(255)")]
		public string Anh1
		{
			get
			{
				return this._Anh1;
			}
			set
			{
				if ((this._Anh1 != value))
				{
					this.OnAnh1Changing(value);
					this.SendPropertyChanging();
					this._Anh1 = value;
					this.SendPropertyChanged("Anh1");
					this.OnAnh1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh2", DbType="VarChar(255)")]
		public string Anh2
		{
			get
			{
				return this._Anh2;
			}
			set
			{
				if ((this._Anh2 != value))
				{
					this.OnAnh2Changing(value);
					this.SendPropertyChanging();
					this._Anh2 = value;
					this.SendPropertyChanged("Anh2");
					this.OnAnh2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHANH_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_Anh", OtherKey="ID_Anh")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HINHANH = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HINHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAU")]
	public partial class MAU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Mau;
		
		private string _TenMau;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MauChanging(int value);
    partial void OnID_MauChanged();
    partial void OnTenMauChanging(string value);
    partial void OnTenMauChanged();
    #endregion
		
		public MAU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mau", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Mau
		{
			get
			{
				return this._ID_Mau;
			}
			set
			{
				if ((this._ID_Mau != value))
				{
					this.OnID_MauChanging(value);
					this.SendPropertyChanging();
					this._ID_Mau = value;
					this.SendPropertyChanged("ID_Mau");
					this.OnID_MauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMau", DbType="NVarChar(50)")]
		public string TenMau
		{
			get
			{
				return this._TenMau;
			}
			set
			{
				if ((this._TenMau != value))
				{
					this.OnTenMauChanging(value);
					this.SendPropertyChanging();
					this._TenMau = value;
					this.SendPropertyChanged("TenMau");
					this.OnTenMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAU_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_Mau", OtherKey="ID_Mau")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SanPham;
		
		private string _TenSanPham;
		
		private System.Nullable<int> _ID_ThuongHieu;
		
		private System.Nullable<int> _ID_DanhMuc;
		
		private System.Nullable<int> _ID_Anh;
		
		private System.Nullable<int> _ID_Size;
		
		private System.Nullable<int> _ID_Mau;
		
		private string _Mota;
		
		private System.Nullable<decimal> _DonViGia;
		
		private System.Nullable<int> _SoLuongTon;
		
		private EntitySet<CT_DATHANG> _CT_DATHANGs;
		
		private EntityRef<HINHANH> _HINHANH;
		
		private EntityRef<DANHMUC> _DANHMUC;
		
		private EntityRef<MAU> _MAU;
		
		private EntityRef<Size> _Size;
		
		private EntityRef<THUONGHIEU> _THUONGHIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnID_ThuongHieuChanging(System.Nullable<int> value);
    partial void OnID_ThuongHieuChanged();
    partial void OnID_DanhMucChanging(System.Nullable<int> value);
    partial void OnID_DanhMucChanged();
    partial void OnID_AnhChanging(System.Nullable<int> value);
    partial void OnID_AnhChanged();
    partial void OnID_SizeChanging(System.Nullable<int> value);
    partial void OnID_SizeChanged();
    partial void OnID_MauChanging(System.Nullable<int> value);
    partial void OnID_MauChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnDonViGiaChanging(System.Nullable<decimal> value);
    partial void OnDonViGiaChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CT_DATHANGs = new EntitySet<CT_DATHANG>(new Action<CT_DATHANG>(this.attach_CT_DATHANGs), new Action<CT_DATHANG>(this.detach_CT_DATHANGs));
			this._HINHANH = default(EntityRef<HINHANH>);
			this._DANHMUC = default(EntityRef<DANHMUC>);
			this._MAU = default(EntityRef<MAU>);
			this._Size = default(EntityRef<Size>);
			this._THUONGHIEU = default(EntityRef<THUONGHIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThuongHieu", DbType="Int")]
		public System.Nullable<int> ID_ThuongHieu
		{
			get
			{
				return this._ID_ThuongHieu;
			}
			set
			{
				if ((this._ID_ThuongHieu != value))
				{
					if (this._THUONGHIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ID_ThuongHieu = value;
					this.SendPropertyChanged("ID_ThuongHieu");
					this.OnID_ThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DanhMuc", DbType="Int")]
		public System.Nullable<int> ID_DanhMuc
		{
			get
			{
				return this._ID_DanhMuc;
			}
			set
			{
				if ((this._ID_DanhMuc != value))
				{
					if (this._DANHMUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DanhMucChanging(value);
					this.SendPropertyChanging();
					this._ID_DanhMuc = value;
					this.SendPropertyChanged("ID_DanhMuc");
					this.OnID_DanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Anh", DbType="Int")]
		public System.Nullable<int> ID_Anh
		{
			get
			{
				return this._ID_Anh;
			}
			set
			{
				if ((this._ID_Anh != value))
				{
					if (this._HINHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AnhChanging(value);
					this.SendPropertyChanging();
					this._ID_Anh = value;
					this.SendPropertyChanged("ID_Anh");
					this.OnID_AnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Size", DbType="Int")]
		public System.Nullable<int> ID_Size
		{
			get
			{
				return this._ID_Size;
			}
			set
			{
				if ((this._ID_Size != value))
				{
					if (this._Size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SizeChanging(value);
					this.SendPropertyChanging();
					this._ID_Size = value;
					this.SendPropertyChanged("ID_Size");
					this.OnID_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mau", DbType="Int")]
		public System.Nullable<int> ID_Mau
		{
			get
			{
				return this._ID_Mau;
			}
			set
			{
				if ((this._ID_Mau != value))
				{
					if (this._MAU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MauChanging(value);
					this.SendPropertyChanging();
					this._ID_Mau = value;
					this.SendPropertyChanged("ID_Mau");
					this.OnID_MauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(255)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViGia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> DonViGia
		{
			get
			{
				return this._DonViGia;
			}
			set
			{
				if ((this._DonViGia != value))
				{
					this.OnDonViGiaChanging(value);
					this.SendPropertyChanging();
					this._DonViGia = value;
					this.SendPropertyChanged("DonViGia");
					this.OnDonViGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CT_DATHANG", Storage="_CT_DATHANGs", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<CT_DATHANG> CT_DATHANGs
		{
			get
			{
				return this._CT_DATHANGs;
			}
			set
			{
				this._CT_DATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHANH_SANPHAM", Storage="_HINHANH", ThisKey="ID_Anh", OtherKey="ID_Anh", IsForeignKey=true)]
		public HINHANH HINHANH
		{
			get
			{
				return this._HINHANH.Entity;
			}
			set
			{
				HINHANH previousValue = this._HINHANH.Entity;
				if (((previousValue != value) 
							|| (this._HINHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HINHANH.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HINHANH.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_Anh = value.ID_Anh;
					}
					else
					{
						this._ID_Anh = default(Nullable<int>);
					}
					this.SendPropertyChanged("HINHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_DANHMUC", ThisKey="ID_DanhMuc", OtherKey="ID_DanhMuc", IsForeignKey=true)]
		public DANHMUC DANHMUC
		{
			get
			{
				return this._DANHMUC.Entity;
			}
			set
			{
				DANHMUC previousValue = this._DANHMUC.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUC.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._DANHMUC.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_DanhMuc = value.ID_DanhMuc;
					}
					else
					{
						this._ID_DanhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("DANHMUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAU_SANPHAM", Storage="_MAU", ThisKey="ID_Mau", OtherKey="ID_Mau", IsForeignKey=true)]
		public MAU MAU
		{
			get
			{
				return this._MAU.Entity;
			}
			set
			{
				MAU previousValue = this._MAU.Entity;
				if (((previousValue != value) 
							|| (this._MAU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._MAU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_Mau = value.ID_Mau;
					}
					else
					{
						this._ID_Mau = default(Nullable<int>);
					}
					this.SendPropertyChanged("MAU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_SANPHAM", Storage="_Size", ThisKey="ID_Size", OtherKey="ID_Size", IsForeignKey=true)]
		public Size Size
		{
			get
			{
				return this._Size.Entity;
			}
			set
			{
				Size previousValue = this._Size.Entity;
				if (((previousValue != value) 
							|| (this._Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Size.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._Size.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_Size = value.ID_Size;
					}
					else
					{
						this._ID_Size = default(Nullable<int>);
					}
					this.SendPropertyChanged("Size");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_THUONGHIEU", ThisKey="ID_ThuongHieu", OtherKey="ID_ThuongHieu", IsForeignKey=true)]
		public THUONGHIEU THUONGHIEU
		{
			get
			{
				return this._THUONGHIEU.Entity;
			}
			set
			{
				THUONGHIEU previousValue = this._THUONGHIEU.Entity;
				if (((previousValue != value) 
							|| (this._THUONGHIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUONGHIEU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._THUONGHIEU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_ThuongHieu = value.ID_ThuongHieu;
					}
					else
					{
						this._ID_ThuongHieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("THUONGHIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CT_DATHANGs(CT_DATHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sizes")]
	public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Size;
		
		private System.Nullable<int> _Size1;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SizeChanging(int value);
    partial void OnID_SizeChanged();
    partial void OnSize1Changing(System.Nullable<int> value);
    partial void OnSize1Changed();
    #endregion
		
		public Size()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Size", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Size
		{
			get
			{
				return this._ID_Size;
			}
			set
			{
				if ((this._ID_Size != value))
				{
					this.OnID_SizeChanging(value);
					this.SendPropertyChanging();
					this._ID_Size = value;
					this.SendPropertyChanged("ID_Size");
					this.OnID_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Size", Storage="_Size1", DbType="Int")]
		public System.Nullable<int> Size1
		{
			get
			{
				return this._Size1;
			}
			set
			{
				if ((this._Size1 != value))
				{
					this.OnSize1Changing(value);
					this.SendPropertyChanging();
					this._Size1 = value;
					this.SendPropertyChanged("Size1");
					this.OnSize1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_Size", OtherKey="ID_Size")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.Size = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.Size = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUONGHIEU")]
	public partial class THUONGHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ThuongHieu;
		
		private string _TenThuongHieu;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThuongHieuChanging(int value);
    partial void OnID_ThuongHieuChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    #endregion
		
		public THUONGHIEU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThuongHieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_ThuongHieu
		{
			get
			{
				return this._ID_ThuongHieu;
			}
			set
			{
				if ((this._ID_ThuongHieu != value))
				{
					this.OnID_ThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ID_ThuongHieu = value;
					this.SendPropertyChanged("ID_ThuongHieu");
					this.OnID_ThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="VarChar(50)")]
		public string TenThuongHieu
		{
			get
			{
				return this._TenThuongHieu;
			}
			set
			{
				if ((this._TenThuongHieu != value))
				{
					this.OnTenThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuongHieu = value;
					this.SendPropertyChanged("TenThuongHieu");
					this.OnTenThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_ThuongHieu", OtherKey="ID_ThuongHieu")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = null;
		}
	}
}
#pragma warning restore 1591
